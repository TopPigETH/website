"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoyaltiesV2Impl__factory = void 0;
const ethers_1 = require("ethers");
class RoyaltiesV2Impl__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RoyaltiesV2Impl__factory = RoyaltiesV2Impl__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address payable",
                        name: "account",
                        type: "address",
                    },
                    {
                        internalType: "uint96",
                        name: "value",
                        type: "uint96",
                    },
                ],
                indexed: false,
                internalType: "struct LibPart.Part[]",
                name: "royalties",
                type: "tuple[]",
            },
        ],
        name: "RoyaltiesSet",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "getRaribleV2Royalties",
        outputs: [
            {
                components: [
                    {
                        internalType: "address payable",
                        name: "account",
                        type: "address",
                    },
                    {
                        internalType: "uint96",
                        name: "value",
                        type: "uint96",
                    },
                ],
                internalType: "struct LibPart.Part[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "royalties",
        outputs: [
            {
                internalType: "address payable",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint96",
                name: "value",
                type: "uint96",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506102a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638924af741461003b578063cad96cca1461008c575b600080fd5b61004e6100493660046101da565b6100ac565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152015b60405180910390f35b61009f61009a3660046101c1565b610118565b60405161008391906101fc565b600060205281600052604060002081815481106100c857600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff811692507401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16905082565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156101b6576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1681830152825260019092019101610144565b505050509050919050565b6000602082840312156101d357600080fd5b5035919050565b600080604083850312156101ed57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015610262578151805173ffffffffffffffffffffffffffffffffffffffff1685528601516bffffffffffffffffffffffff16868501529284019290850190600101610219565b509197965050505050505056fea2646970667358221220c20a81d004a0c6a5f29c1fdabda9d7de4ecdb11e0dfc0c6d2f00969eb1dd597b64736f6c63430008060033";
