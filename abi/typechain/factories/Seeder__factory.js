"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Seeder__factory = void 0;
const ethers_1 = require("ethers");
class Seeder__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Seeder__factory = Seeder__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "wizardId",
                type: "uint256",
            },
            {
                internalType: "contract IDescriptor",
                name: "descriptor",
                type: "address",
            },
            {
                internalType: "bool",
                name: "isOneOfOne",
                type: "bool",
            },
            {
                internalType: "uint48",
                name: "oneOfOneIndex",
                type: "uint48",
            },
        ],
        name: "generateSeed",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint48",
                        name: "background",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "skin",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "clothes",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "eyes",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "mouth",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "accessory",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "bgItem",
                        type: "uint48",
                    },
                    {
                        internalType: "uint48",
                        name: "hat",
                        type: "uint48",
                    },
                    {
                        internalType: "bool",
                        name: "oneOfOne",
                        type: "bool",
                    },
                    {
                        internalType: "uint48",
                        name: "oneOfOneIndex",
                        type: "uint48",
                    },
                ],
                internalType: "struct ISeeder.Seed",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061094d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806366438bc214610030575b600080fd5b61004361003e366004610714565b610059565b6040516100509190610790565b60405180910390f35b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152821561010f57506040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915282151561010082015265ffffffffffff82166101208201526106f3565b600061011c600143610896565b4086444161012c836103f261087e565b6040805160208101969096528501939093526060808501929092527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000911b166080830152609482015260b4016040516020818303038152906040528051906020012060001c905060008573ffffffffffffffffffffffffffffffffffffffff16634531c0a86040518163ffffffff1660e01b815260040160206040518083038186803b1580156101db57600080fd5b505afa1580156101ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021391906106fb565b905060008673ffffffffffffffffffffffffffffffffffffffff1663ad1a4c3d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561025d57600080fd5b505afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029591906106fb565b905060008773ffffffffffffffffffffffffffffffffffffffff16630de518666040518163ffffffff1660e01b815260040160206040518083038186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906106fb565b905060008873ffffffffffffffffffffffffffffffffffffffff16638104468c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906106fb565b905060008973ffffffffffffffffffffffffffffffffffffffff1663fcbc920c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e357600080fd5b505afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b91906106fb565b905060008a73ffffffffffffffffffffffffffffffffffffffff16632c6be7cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561046557600080fd5b505afa158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d91906106fb565b905060008b73ffffffffffffffffffffffffffffffffffffffff16634daebac26040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f91906106fb565b905060008c73ffffffffffffffffffffffffffffffffffffffff16636b4311576040518163ffffffff1660e01b815260040160206040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a191906106fb565b9050604051806101400160405280898b65ffffffffffff166105c391906108ad565b65ffffffffffff1681526020018860308c901c65ffffffffffff166105e891906108ad565b65ffffffffffff1681526020018460308c901c65ffffffffffff1661060d91906108ad565b65ffffffffffff1681526020018660c08c901c65ffffffffffff1661063291906108ad565b65ffffffffffff1681526020018760908c901c65ffffffffffff1661065791906108ad565b65ffffffffffff1681526020018360608c901c65ffffffffffff1661067c91906108ad565b65ffffffffffff1681526020018260608c901c65ffffffffffff166106a191906108ad565b65ffffffffffff1681526020018560908c901c65ffffffffffff166106c691906108ad565b65ffffffffffff1681526020018d151581526020018c65ffffffffffff1681525099505050505050505050505b949350505050565b60006020828403121561070d57600080fd5b5051919050565b6000806000806080858703121561072a57600080fd5b84359350602085013573ffffffffffffffffffffffffffffffffffffffff8116811461075557600080fd5b92506040850135801515811461076a57600080fd5b9150606085013565ffffffffffff8116811461078557600080fd5b939692955090935050565b815165ffffffffffff168152610140810160208301516107ba602084018265ffffffffffff169052565b5060408301516107d4604084018265ffffffffffff169052565b5060608301516107ee606084018265ffffffffffff169052565b506080830151610808608084018265ffffffffffff169052565b5060a083015161082260a084018265ffffffffffff169052565b5060c083015161083c60c084018265ffffffffffff169052565b5060e083015161085660e084018265ffffffffffff169052565b50610100838101511515908301526101209283015165ffffffffffff16929091019190915290565b60008219821115610891576108916108e8565b500190565b6000828210156108a8576108a86108e8565b500390565b6000826108e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207ee3fd654dd746b77930703047573441dbbdebca2fcef2ecf1271cfecd66225464736f6c63430008060033";
